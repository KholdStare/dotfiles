#!/bin/bash
set -e
# suppress glob expansion in script
set -f
set -u

USAGE="Create ctags for files/folders specified
Usage:
    generate-ctags <language> [<files/folders>...]

Languages:
    HASKELL, HS
    CPP, C
"

if [[ $# -eq 0 ]]; then
    echo "${USAGE}" >&2
    exit 1
fi

# ===============================
# Helpers
predicate-is-directory() {
    [[ -d "$1" ]]
    return $?
}

predicate-is-file() {
    [[ -f "$1" ]]
    return $?
}

filter() {
    PREDICATE=$1
    shift

    for WORD in "$@"; do
        if ${PREDICATE} ${WORD}; then
            echo $WORD
        fi
    done
}

find_source_files() {
    if [[ -n "${DIRECTORIES}" ]]; then
        find ${DIRECTORIES} -type f ${FIND_PATTERN}
    fi
}
# ===============================

LANGAUGE=$1
shift

DIRECTORIES=$(filter "predicate-is-directory" $@)
FILENAMES=$(filter "predicate-is-file" $@)

if [[ -z "${DIRECTORIES}" ]] && [[ -z "${FILENAMES}" ]]; then
    DIRECTORIES="."
fi

CUSTOM_COMMAND=''
case ${LANGAUGE} in
    CPP|C)
        FIND_PATTERN="-name "*.c" -o -name "*.cpp" -o -name "*.cxx" -o -name "*.cc" -o -name "*.h" -o -name "*.hpp" -o -name "*.hxx""
        CTAGS_OPTIONS='--c-kinds=+p --c++-kinds=+p --languages=+C,C++ --extra=fq --fields=+a+n'
        ;;
    HASKELL|HS)
        CUSTOM_COMMAND="hasktags -c -x ${DIRECTORIES} ${FILENAMES}"
        ;;
    *)
        echo "${USAGE}" >&2
        exit 1
        ;;
esac
# ===============================

if [[ -z "${CUSTOM_COMMAND}" ]]; then
    cat <(find_source_files) <(echo "${FILENAMES}") \
        | tee cscope.files \
        | ctags --tag-relative -L- --exclude=.git ${CTAGS_OPTIONS}

    cscope -b -q
else
    ${CUSTOM_COMMAND}
fi
