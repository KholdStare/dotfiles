#!/bin/bash
set -e
set -u

USAGE="Create ctags for files/folders specified
Usage:
    generate-ctags <language> [<files/folders>...]

Languages:
    CPP
    C
"

if [[ $# -eq 0 ]]; then
    echo "${USAGE}" >&2
    exit 1
fi

# ===============================
# Helpers
predicate-is-directory() {
    [[ -d "$1" ]]
    return $?
}

predicate-is-file() {
    [[ -f "$1" ]]
    return $?
}

filter() {
    PREDICATE=$1
    shift

    for WORD in "$@"; do
        if ${PREDICATE} ${WORD}; then
            echo $WORD
        fi
    done
}
# ===============================

LANGAUGE=$1
shift

case ${LANGAUGE} in
    CPP|C)
        FIND_PATTERN="( -name "*.c" -o -name "*.cpp" -o -name "*.cxx" -o -name "*.cc" -o -name "*.h" -o -name "*.hpp" -o -name "*.hxx" )"
        CTAGS_OPTIONS='--c-kinds=+p --c++-kinds=+p --languages=+C,C++ --extra=fq --fields=+a+n'
        ;;
    *)
        echo "${USAGE}" >&2
        exit 1
        ;;
esac

DIRECTORIES=$(filter "predicate-is-directory" $@)
FILENAMES=$(filter "predicate-is-file" $@)

if [[ -z "${DIRECTORIES}" ]] && [[ -z "${FILENAMES}" ]]; then
    DIRECTORIES="."
fi


# feed all filenames through a pipe
FILENAME_PIPE=/tmp/tmp.filepipe.$$
mkfifo ${FILENAME_PIPE}
trap "rm ${FILENAME_PIPE}" EXIT

echo "${FILENAMES}" > ${FILENAME_PIPE}

if [[ -n "${DIRECTORIES}" ]]; then
    find ${DIRECTORIES} -type f ${FIND_PATTERN} >> ${FILENAME_PIPE} &
fi
# ===============================

(tee cscope.files | ctags --tag-relative -L- --exclude=.git ${CTAGS_OPTIONS}) < ${FILENAME_PIPE}
cscope -b -q
